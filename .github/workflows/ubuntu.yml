# This is a basic workflow to help you get started with Actions

name: Ubuntu Build

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
#   workflow_dispatch:

# env:
#   # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
#   BUILD_TYPE: Release


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
      strategy:
      matrix:
        os: [ ubuntu-20.04, ubuntu-22.04 ]

    # The type of runner that the job will run on
    runs-on: {{ matrix.os }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: "Apt update"
        run: "sudo apt-get update"

      - name: "Install dependencies"
        if: matrix.os == 'ubuntu-20.04'
          run: "sudo apt-get install build-essential qt5-default cmake libqt5svg5-dev qtmultimedia5-dev"
        if: matrix.os == 'ubuntu-22.04'
          run: "sudo apt-get install build-essential qt6-default cmake libqt6svg6-dev qtmultimedia6-dev"

      - name: "Create build directory and run CMake"
        if: matrix.os == 'ubuntu-20.04'
          run: "mkdir build && cd build && \
            cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_INSTALL_PREFIX=/usr -DUSE_QT6='NO' .."
        if: matrix.os == 'ubuntu-22.04'
          run: "mkdir build && cd build && \
            cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_INSTALL_PREFIX=/usr .."

      - name: "Build"
        run: "cd build && make"

      - name: Prepare build artifacts
        run: "cd build && make DESTDIR=install install"