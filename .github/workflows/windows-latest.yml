name: Windows Build

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_call:
    inputs:
      version:
        description: 'Version tag for the release'
        required: false
        type: string
        default: ''
      upload_to_release:
        description: 'Whether to upload artifacts to a release'
        required: false
        type: boolean
        default: false
  # Allows you to run this workflow manually from the Actions tab
    # workflow_dispatch:

# env:
#   # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
#   BUILD_TYPE: Release


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: windows-2022

    strategy:
      matrix:
        qt-version: [ '5.15.2', '6.8.3' ]

    steps:
      - uses: actions/checkout@v4

      - name: "Install Qt 5.15.2"
        if: matrix.qt-version == '5.15.2'
        uses: jurplel/install-qt-action@v3
        with:
          version: '5.15.2'
          host: 'windows'
          dir: '${{ github.workspace }}'
          # modules: 'qtsvg'
          arch: 'win64_msvc2019_64'
          set-env: 'true'
          setup-python: 'true'

      - name: "Install Qt 6.8.3"
        if: matrix.qt-version == '6.8.3'
        uses: jurplel/install-qt-action@v3
        with:
          version: '6.8.3'
          host: 'windows'
          dir: '${{ github.workspace }}'
          modules: 'qtmultimedia'
          arch: 'win64_msvc2022_64'
          set-env: 'true'
          setup-python: 'true'

      - name: "Create build directory and run CMake Qt 6.8.3"
        if: matrix.qt-version == '6.8.3'
        run: |
          mkdir build && cd build
          if ("${{ inputs.upload_to_release }}" -eq "true") {
            cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo ..
          } else {
            cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -DBUILD_TESTS=ON ..
          }

      - name: "Create build directory and run CMake Qt 5.15.2"
        if: matrix.qt-version == '5.15.2'
        run: |
          mkdir build && cd build
          if ("${{ inputs.upload_to_release }}" -eq "true") {
            cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -DUSE_QT6='NO' ..
          } else {
            cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -DUSE_QT6='NO' -DBUILD_TESTS=ON ..
          }

      - name: "Build"
        run: "cd build && cmake --build . --config Release"

      - name: "Run tests"
        if: inputs.upload_to_release != true
        run: "cd build && ctest --extra-verbose --progress --output-on-failure -C Release"

      - name: Prepare build artifacts
        run: |
          Set-Location ./build
          if ("${{ matrix.qt-version }}" -eq "5.15.2") {
            ${{ github.workspace }}/Qt/${{ matrix.qt-version}}/msvc2019_64/bin/windeployqt.exe --no-translations ./Release
          } else {
            ${{ github.workspace }}/Qt/${{ matrix.qt-version}}/msvc2022_64/bin/windeployqt.exe --no-translations ./Release
          }
          Copy-Item ../README.md ./Release
          Copy-Item ../LICENSE ./Release
          New-Item -ItemType Directory ./Release/minefield_extra_themes
          Copy-Item ../share/minefield_themes/alternative_dark ./Release/minefield_extra_themes -Recurse
          Copy-Item ../share/minefield_themes/alternative_light ./Release/minefield_extra_themes -Recurse
          Copy-Item ../share/minefield_themes/flowerfield ./Release/minefield_extra_themes -Recurse
          Copy-Item ../share/minefield_themes/twemoji ./Release/minefield_extra_themes -Recurse
          New-Item -ItemType Directory ./Release/facesreaction_extra_themes
          Copy-Item ../share/faces_reaction/open-emoji-black ./Release/facesreaction_extra_themes -Recurse
          Copy-Item ../share/faces_reaction/open-emoji-white ./Release/facesreaction_extra_themes -Recurse
          Copy-Item ../share/faces_reaction/twemoji-color ./Release/facesreaction_extra_themes -Recurse
          Copy-Item ../share/faces_reaction/SecularSteve_custom ./Release/facesreaction_extra_themes -Recurse

      - name: Create ZIP for Release
        if: inputs.upload_to_release
        run: |
          Set-Location ./build
          New-Item -ItemType Directory -Name "libremines"
          Copy-Item ./Release/* ./libremines -Recurse
          if ("${{ matrix.qt-version }}" -eq "5.15.2") {
            Compress-Archive -Path ./libremines -DestinationPath "libremines-${{ inputs.version }}-windows-qt5.zip"
          } else {
            Compress-Archive -Path ./libremines -DestinationPath "libremines-${{ inputs.version }}-windows-qt6.zip"  
          }

      - name: Prepare artifact directory structure
        run: |
          Set-Location ./build
          New-Item -ItemType Directory -Name "artifact-temp" -Force
          New-Item -ItemType Directory -Name "artifact-temp/libremines" -Force
          Copy-Item ./Release/* ./artifact-temp/libremines -Recurse

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: libremines-build-windows-qt-${{ matrix.qt-version }}
          path: build/artifact-temp/
          
      - name: Upload to Release
        if: inputs.upload_to_release
        uses: softprops/action-gh-release@v2
        with:
          files: build/*.zip
