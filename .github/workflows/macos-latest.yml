name: macOS Build

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_call:
    inputs:
      version:
        description: 'Version tag for the release'
        required: false
        type: string
        default: ''
      upload_to_release:
        description: 'Whether to upload artifacts to a release'
        required: false
        type: boolean
        default: false
  # Allows you to run this workflow manually from the Actions tab
    # workflow_dispatch:

# env:
#   # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
#   BUILD_TYPE: Release


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-13, macos-15]
        qt-version: [5, 6]

    steps:
      - uses: actions/checkout@v4

      - name: "Install Qt 5 via Homebrew"
        if: matrix.qt-version == 5
        run: |
          brew install qt@5
          echo "Qt5_DIR=$(brew --prefix qt@5)/lib/cmake/Qt5" >> $GITHUB_ENV
          echo "$(brew --prefix qt@5)/bin" >> $GITHUB_PATH

      - name: "Install Qt 6 via Homebrew"
        if: matrix.qt-version == 6
        run: |
          brew install qt
          echo "Qt6_DIR=$(brew --prefix qt)/lib/cmake/Qt6" >> $GITHUB_ENV
          echo "$(brew --prefix qt)/bin" >> $GITHUB_PATH

      - name: "Create build directory and run CMake Qt 6"
        if: matrix.qt-version == 6
        run: "mkdir build && cd build && cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo .."

      - name: "Create build directory and run CMake Qt 5"
        if: matrix.qt-version == 5
        run: "mkdir build && cd build && cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -DUSE_QT6='NO' .."

      - name: "Build"
        run: "cd build && make"

      - name: Prepare build artifacts
        run: |
          cd build
          if [ "${{ matrix.qt-version }}" = "5" ]; then
            $(brew --prefix qt@5)/bin/macdeployqt ./libremines.app
          else
            $(brew --prefix qt)/bin/macdeployqt ./libremines.app
          fi
          cp ../README.md ./libremines.app/Contents/Resources/
          cp ../LICENSE ./libremines.app/Contents/Resources/
          mkdir -p ./libremines.app/Contents/Resources/minefield_extra_themes
          cp -r ../share/minefield_themes/alternative_dark ./libremines.app/Contents/Resources/minefield_extra_themes/
          cp -r ../share/minefield_themes/alternative_light ./libremines.app/Contents/Resources/minefield_extra_themes/
          cp -r ../share/minefield_themes/flowerfield ./libremines.app/Contents/Resources/minefield_extra_themes/
          cp -r ../share/minefield_themes/twemoji ./libremines.app/Contents/Resources/minefield_extra_themes/
          mkdir -p ./libremines.app/Contents/Resources/facesreaction_extra_themes
          cp -r ../share/faces_reaction/open-emoji-black ./libremines.app/Contents/Resources/facesreaction_extra_themes/
          cp -r ../share/faces_reaction/open-emoji-white ./libremines.app/Contents/Resources/facesreaction_extra_themes/
          cp -r ../share/faces_reaction/twemoji-color ./libremines.app/Contents/Resources/facesreaction_extra_themes/
          cp -r ../share/faces_reaction/SecularSteve_custom ./libremines.app/Contents/Resources/facesreaction_extra_themes/

      - name: Create ZIP for Release using ditto
        if: inputs.upload_to_release
        run: |
          cd build
          if [ "${{ matrix.os }}" = "macos-13" ]; then
            ARCH="intel"
          else
            ARCH="arm64"
          fi
          # Use ditto to create a proper macOS app bundle archive that preserves symlinks
          ditto -c -k --sequesterRsrc --keepParent libremines.app "libremines-${{ inputs.version }}-macos-${ARCH}-qt${{ matrix.qt-version }}.app.zip"

      - name: Prepare artifact directory structure
        run: |
          cd build
          mkdir -p artifact-temp
          cp -R libremines.app artifact-temp/

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: libremines-build-macos-${{ matrix.os }}-qt-${{ matrix.qt-version }}
          path: build/artifact-temp/
          
      - name: Upload to Release
        if: inputs.upload_to_release
        uses: softprops/action-gh-release@v2
        with:
          files: build/*.zip